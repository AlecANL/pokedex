type PageInfo {
  endCursor: ID
  hasNextPage: Boolean
}

type WeightHeight {
  minimum: String
  maximum: String
}

type PokemonEvolution {
  id: Int
  name: String
}

type PokemonAttack {
  name: String
  type: String
  damage: Int
}

type PokemonAttacks {
  fast: [PokemonAttack]
  special: [PokemonAttack]
}

type Pokemon {
  id: ID!
  name: String
  types: [String]
  classification: String
  weight: WeightHeight!
  height: WeightHeight!
  evolutions: [PokemonEvolution]
  attacks: PokemonAttacks
}

type PokemonEdge {
  cursor: ID!
  node: Pokemon
}

type PokemonsConnection {
  edges: [PokemonEdge]
  pageInfo: PageInfo
}

input FilterInput {
  name: String
  type: String
  classification: String
}

type Query {
  pokemons(q: FilterInput, after: ID, limit: Int): PokemonsConnection
}
